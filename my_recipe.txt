#
# Set up production environment
#
export SCRAM_ARCH=slc6_amd64_gcc530
cmsrel CMSSW_8_0_21
cd CMSSW_8_0_21/src
cmsenv
mkdir -p Configuration/GenProduction/python/
cp /afs/cern.ch/user/m/mrenna/public/models/T2qq/T2qq_fragment.py Configuration/GenProduction/python/
scram b
cd -



#
# Generate cmsRun config to produce GEN-SIM. The config is not automatically run

# (note the --no_exec option). Allows for calling cmsRun later with additional options

# if desired. In this example, 50 events are produced, with 50 events per lumi block.
#
cmsDriver.py Configuration/GenProduction/python/T1qqqqLL_fragment.py --mc --eventcontent RAWSIM --customise_commands "process.source.numberEventsInLuminosityBlock = cms.untracked.uint32(50) \n process.source.firstRun = cms.untracked.uint32(3) \n process.generator.initialSeed = cms.untracked.uint32(3)" --datatier GEN-SIM --conditions 80X_mcRun2_asymptotic_2016_TrancheIV_v6 --beamspot Realistic50ns13TeVCollision --step GEN,SIM --magField 38T_PostLS1  --fileout file:T1qqqqLL_GEN-SIM.root --python_filename T1qqqqLL_cfg.py --no_exec -n 50

#
# Perform DIGI-RECO. Process is split into DIGI-step and RECO-step (note: runs cmsRun automatically).

# Original From Kevin:
# cmsDriver.py
# step1
# --conditions 80X_mcRun2_asymptotic_2016_TrancheIV_v6
# --datamix PreMix
# --datatier GEN-SIM-RAW
# --era Run2_2016
# --eventcontent PREMIXRAW
# --filein file:T1qqqqLL_GEN-SIM.root
# --fileout file:step1.root
# --mc
# --nThreads 4
# --pileup_input "/store/mc/RunIISpring15PrePremix/Neutrino_E-10_gun/GEN-SIM-DIGI-RAW/PUMoriond17_80X_mcRun2_asymptotic_2016_TrancheIV_v2-v2/90023/FED016AB-6A85-E611-96E7-002590A80DF0.root"
# --step DIGIPREMIX_S2,DATAMIX,L1,DIGI2RAW,HLT:@frozen2016

# From Shane's: https://raw.githubusercontent.com/shane-breeze/ProdDMS/master/StepPUMixing/test/AODSIM_step1_cfg.py
# step1
# --conditions 80X_mcRun2_asymptotic_2016_v3
# --customise Configuration/DataProcessing/Utils.addMonitoring
# --customise_commands process.simHcalDigis.markAndPass = cms.bool(True)
# --datatier GEN-SIM-RAW
# --era Run2_25ns
# --eventcontent RAWSIM
# --filein file:IC-RunIISummer15GS-06337.root
# --fileout file:IC-RunIISpring16DR80-01180_step1.root
# --mc
# --no_exec
# --pileup 2016_25ns_SpringMC_PUScenarioV1_PoissonOOTPU
# --pileup_input dbs:/MinBias_TuneCUETP8M1_13TeV-pythia8/RunIISummer15GS-MCRUN2_71_V1-v2/GEN-SIM
# --python_filename IC-RunIISpring16DR80-01180_1_cfg.py
# --step DIGI,L1,DIGI2RAW,HLT:@frozen25ns

# My command:
cmsDriver.py step1 --conditions 80X_mcRun2_asymptotic_2016_TrancheIV_v6 --datamix PreMix --datatier GEN-SIM-RAW --era Run2_2016 --eventcontent PREMIXRAW --filein file:T1qqqqLL_GEN-SIM.root --fileout file:step1.root --mc --no_exec --nThreads 4 --pileup 2016_25ns_Moriond17MC_PoissonOOTPU --pileup_input dbs:/MinBias_TuneCUETP8M1_13TeV-pythia8/RunIISummer15GS-MCRUN2_71_V1-v2/GEN-SIM --step DIGIPREMIX_S2,DATAMIX,L1,DIGI2RAW,HLT:@frozen2016

####
# RECO-step
cmsDriver.py step2 --mc --eventcontent AODSIM,DQM --runUnscheduled --datatier AODSIM,DQMIO --conditions 80X_mcRun2_asymptotic_2016_TrancheIV_v6 --step RAW2DIGI,RECO,EI,DQM:DQMOfflinePOGMC --nThreads 4 --era Run2_2016 --filein file:step1.root --fileout file:T1qqqqLL_AODSIM.root --no_exec

#
# Produce MINIAOD
#
cmsDriver.py step3 --mc --eventcontent MINIAODSIM --runUnscheduled --datatier MINIAODSIM --conditions 80X_mcRun2_asymptotic_2016_TrancheIV_v6 --step PAT --era Run2_2016  --filein file:T1qqqqLL_AODSIM.root --fileout file:T1qqqqLL_MINIAODSIM.root --no_exec
